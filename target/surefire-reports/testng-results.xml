<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-04T23:13:08 IST" name="Surefire suite" finished-at="2023-03-04T23:14:36 IST" duration-ms="87873">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-03-04T23:13:08 IST" name="Surefire test" finished-at="2023-03-04T23:14:36 IST" duration-ms="87873">
      <class name="TestRunner">
        <test-method is-config="true" signature="setup()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:08 IST" name="setup" finished-at="2023-03-04T23:13:08 IST" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:08 IST" name="setUpClass" finished-at="2023-03-04T23:13:08 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1002d192]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:08 IST" name="startTest" finished-at="2023-03-04T23:13:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-03-04T23:13:25 IST" duration-ms="16990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the feature of Default Layout Animation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the features of Animation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:25 IST" name="endTest" finished-at="2023-03-04T23:13:25 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testCaseResult(org.testng.ITestResult)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:25 IST" name="testCaseResult" finished-at="2023-03-04T23:13:25 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:25 IST" name="startTest" finished-at="2023-03-04T23:13:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-03-04T23:13:39 IST" duration-ms="14415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the feature of Hide and Show Animation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the features of Animation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:39 IST" name="endTest" finished-at="2023-03-04T23:13:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testCaseResult(org.testng.ITestResult)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:39 IST" name="testCaseResult" finished-at="2023-03-04T23:13:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:39 IST" name="startTest" finished-at="2023-03-04T23:13:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-03-04T23:13:53 IST" duration-ms="13424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the feature of Cloning"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the features of Animation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:53 IST" name="endTest" finished-at="2023-03-04T23:13:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:53 IST" name="startTest" finished-at="2023-03-04T23:13:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-03-04T23:14:06 IST" duration-ms="13685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the feature of Animate Drawables"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the features of Graphic Tab"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="testCaseResult(org.testng.ITestResult)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:13:53 IST" name="testCaseResult" finished-at="2023-03-04T23:13:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseResult -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:06 IST" name="endTest" finished-at="2023-03-04T23:14:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testCaseResult(org.testng.ITestResult)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:06 IST" name="testCaseResult" finished-at="2023-03-04T23:14:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseResult -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:06 IST" name="startTest" finished-at="2023-03-04T23:14:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:06 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-03-04T23:14:21 IST" duration-ms="14134" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the feature of Arcs"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the features of Graphic Tab"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Graphics/Arc] but found [Graphics/Arcs]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Graphics/Arc] but found [Graphics/Arcs]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at stepDefinition.GraphicStepDef.user_is_directed_to_arcs(GraphicStepDef.java:52)
at ✽.User is directed to Arcs(file:///C:/Users/ritiksharma03/eclipse-workspace/ExitTest/src/test/java/features/Graphic.feature:13)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="testCaseResult(org.testng.ITestResult)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:21 IST" name="testCaseResult" finished-at="2023-03-04T23:14:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=FAILURE method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseResult -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:21 IST" name="endTest" finished-at="2023-03-04T23:14:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:21 IST" name="startTest" finished-at="2023-03-04T23:14:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-03-04T23:14:36 IST" duration-ms="14968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify functionality of SMS Messaging"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the features of OS"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:36 IST" name="endTest" finished-at="2023-03-04T23:14:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="testCaseResult(org.testng.ITestResult)[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:36 IST" name="testCaseResult" finished-at="2023-03-04T23:14:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner@77f80c04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseResult -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:36 IST" name="tearDownClass" finished-at="2023-03-04T23:14:36 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="Teardown()[pri:0, instance:TestRunner@77f80c04]" started-at="2023-03-04T23:14:36 IST" name="Teardown" finished-at="2023-03-04T23:14:36 IST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Teardown -->
      </class> <!-- TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
